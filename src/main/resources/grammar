Program -> [Block]
Block -> [{, Decls, Stmts, }]
Decls -> [Decl, Decls]
Decls -> [ε]
Decl -> [Type, id, ;]
Type -> [basic, Dims]
Dims -> [[, num, ], Dims]
Dims -> [ε]
Stmts -> [Seq]
Seq -> [Stmt, seq]
Seq -> [ε]
Stmt -> [Loc, =, Bool, ;]
Stmt -> [if, (, Bool, ), Stmt]
Stmt -> [if, (, Bool, ), Stmt, else, Stmt]
Stmt -> [while, (, Bool, ), Stmt]
Stmt -> [do, Stmt, while, (, Bool, ), ;]
Stmt -> [break, ;]
Stmt -> [Block]
Loc -> [id, Loc']
Loc' -> [[, Bool, ], Loc']
Loc' -> [ε]
Bool -> [Join, Bool']
Bool' -> [||, Join, Bool']
Bool' -> [ε]
Join -> [Equality, Join']
Join' -> [&&, Equality, Join']
Join' -> [ε]
Equality -> [Rel, Equality']
Equality' -> [==, Rel, Equality']
Equality' -> [!=, Rel, Equality']
Equality' -> [ε]
Rel -> [Expr, <, Expr]
Rel -> [Expr, <=, Expr]
Rel -> [Expr, >, Expr]
Rel -> [Expr, >=, Expr]
Rel -> [Expr]
Expr -> [Term, Expr']
Expr' -> [+, Term, Expr']
Expr' -> [-, Term, Expr']
Expr' -> [ε]
Term -> [Unary, Term']
Term' -> [*, Unary, Term']
Term' -> [/, Unary, Term']
Term' -> [ε]
Unary -> [!, Unary]
Unary -> [-, Unary]
Unary -> [Factor]
Factor -> [(, Bool, )]
Factor -> [Loc]
Factor -> [num]
Factor -> [real]
Factor -> [true]
Factor -> [false]

