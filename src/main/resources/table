预测分析表:
M[Loc, id] = Loc -> [id, Loc']
M[Program, {] = Program -> [Block]
M[Stmts, break] = Stmts -> [Seq]
M[Stmts, do] = Stmts -> [Seq]
M[Stmts, {] = Stmts -> [Seq]
M[Stmts, id] = Stmts -> [Seq]
M[Stmts, while] = Stmts -> [Seq]
M[Stmts, if] = Stmts -> [Seq]
M[Stmts, }] = Stmts -> [Seq]
M[Loc', ==] = Loc' -> [ε]
M[Loc', &&] = Loc' -> [ε]
M[Loc', ||] = Loc' -> [ε]
M[Loc', <=] = Loc' -> [ε]
M[Loc', )] = Loc' -> [ε]
M[Loc', *] = Loc' -> [ε]
M[Loc', +] = Loc' -> [ε]
M[Loc', -] = Loc' -> [ε]
M[Loc', /] = Loc' -> [ε]
M[Loc', [] = Loc' -> [[, Bool, ], Loc']
M[Loc', ;] = Loc' -> [ε]
M[Loc', <] = Loc' -> [ε]
M[Loc', !=] = Loc' -> [ε]
M[Loc', =] = Loc' -> [ε]
M[Loc', ]] = Loc' -> [ε]
M[Loc', >] = Loc' -> [ε]
M[Loc', >=] = Loc' -> [ε]
M[Decls, break] = Decls -> [ε]
M[Decls, else] = Decls -> [ε]
M[Decls, do] = Decls -> [ε]
M[Decls, {] = Decls -> [ε]
M[Decls, id] = Decls -> [ε]
M[Decls, basic] = Decls -> [Decl, Decls]
M[Decls, while] = Decls -> [ε]
M[Decls, if] = Decls -> [ε]
M[Decls, }] = Decls -> [ε]
M[Decls, seq] = Decls -> [ε]
M[Decls, ￿] = Decls -> [ε]
M[Join, !] = Join -> [Equality, Join']
M[Join, num] = Join -> [Equality, Join']
M[Join, (] = Join -> [Equality, Join']
M[Join, true] = Join -> [Equality, Join']
M[Join, false] = Join -> [Equality, Join']
M[Join, id] = Join -> [Equality, Join']
M[Join, real] = Join -> [Equality, Join']
M[Join, -] = Join -> [Equality, Join']
M[Decl, basic] = Decl -> [Type, id, ;]
M[Dims, [] = Dims -> [[, num, ], Dims]
M[Dims, id] = Dims -> [ε]
M[Bool', ||] = Bool' -> [||, Join, Bool']
M[Bool', )] = Bool' -> [ε]
M[Bool', ;] = Bool' -> [ε]
M[Bool', ]] = Bool' -> [ε]
M[Term, !] = Term -> [Unary, Term']
M[Term, num] = Term -> [Unary, Term']
M[Term, (] = Term -> [Unary, Term']
M[Term, true] = Term -> [Unary, Term']
M[Term, false] = Term -> [Unary, Term']
M[Term, id] = Term -> [Unary, Term']
M[Term, real] = Term -> [Unary, Term']
M[Term, -] = Term -> [Unary, Term']
M[Unary, !] = Unary -> [!, Unary]
M[Unary, num] = Unary -> [Factor]
M[Unary, (] = Unary -> [Factor]
M[Unary, true] = Unary -> [Factor]
M[Unary, false] = Unary -> [Factor]
M[Unary, id] = Unary -> [Factor]
M[Unary, real] = Unary -> [Factor]
M[Unary, -] = Unary -> [-, Unary]
M[Stmt, break] = Stmt -> [break, ;]
M[Stmt, id] = Stmt -> [Loc, =, Bool, ;]
M[Stmt, do] = Stmt -> [do, Stmt, while, (, Bool, ), ;]
M[Stmt, {] = Stmt -> [Block]
M[Stmt, while] = Stmt -> [while, (, Bool, ), Stmt]
M[Stmt, if] = Stmt -> [if, (, Bool, ), Stmt, else, Stmt]
M[Type, basic] = Type -> [basic, Dims]
M[Equality', ==] = Equality' -> [==, Rel, Equality']
M[Equality', &&] = Equality' -> [ε]
M[Equality', ||] = Equality' -> [ε]
M[Equality', )] = Equality' -> [ε]
M[Equality', ;] = Equality' -> [ε]
M[Equality', !=] = Equality' -> [!=, Rel, Equality']
M[Equality', ]] = Equality' -> [ε]
M[Expr, !] = Expr -> [Term, Expr']
M[Expr, num] = Expr -> [Term, Expr']
M[Expr, (] = Expr -> [Term, Expr']
M[Expr, true] = Expr -> [Term, Expr']
M[Expr, false] = Expr -> [Term, Expr']
M[Expr, id] = Expr -> [Term, Expr']
M[Expr, real] = Expr -> [Term, Expr']
M[Expr, -] = Expr -> [Term, Expr']
M[Term', ==] = Term' -> [ε]
M[Term', &&] = Term' -> [ε]
M[Term', ||] = Term' -> [ε]
M[Term', <=] = Term' -> [ε]
M[Term', )] = Term' -> [ε]
M[Term', *] = Term' -> [*, Unary, Term']
M[Term', +] = Term' -> [ε]
M[Term', -] = Term' -> [ε]
M[Term', /] = Term' -> [/, Unary, Term']
M[Term', ;] = Term' -> [ε]
M[Term', <] = Term' -> [ε]
M[Term', !=] = Term' -> [ε]
M[Term', ]] = Term' -> [ε]
M[Term', >] = Term' -> [ε]
M[Term', >=] = Term' -> [ε]
M[Bool, !] = Bool -> [Join, Bool']
M[Bool, num] = Bool -> [Join, Bool']
M[Bool, (] = Bool -> [Join, Bool']
M[Bool, true] = Bool -> [Join, Bool']
M[Bool, false] = Bool -> [Join, Bool']
M[Bool, id] = Bool -> [Join, Bool']
M[Bool, real] = Bool -> [Join, Bool']
M[Bool, -] = Bool -> [Join, Bool']
M[Expr', ==] = Expr' -> [ε]
M[Expr', &&] = Expr' -> [ε]
M[Expr', ||] = Expr' -> [ε]
M[Expr', <=] = Expr' -> [ε]
M[Expr', )] = Expr' -> [ε]
M[Expr', +] = Expr' -> [+, Term, Expr']
M[Expr', -] = Expr' -> [-, Term, Expr']
M[Expr', ;] = Expr' -> [ε]
M[Expr', <] = Expr' -> [ε]
M[Expr', !=] = Expr' -> [ε]
M[Expr', ]] = Expr' -> [ε]
M[Expr', >] = Expr' -> [ε]
M[Expr', >=] = Expr' -> [ε]
M[Factor, num] = Factor -> [num]
M[Factor, (] = Factor -> [(, Bool, )]
M[Factor, true] = Factor -> [true]
M[Factor, false] = Factor -> [false]
M[Factor, id] = Factor -> [Loc]
M[Factor, real] = Factor -> [real]
M[Rel, !] = Rel -> [Expr]
M[Rel, num] = Rel -> [Expr]
M[Rel, (] = Rel -> [Expr]
M[Rel, true] = Rel -> [Expr]
M[Rel, false] = Rel -> [Expr]
M[Rel, id] = Rel -> [Expr]
M[Rel, real] = Rel -> [Expr]
M[Rel, -] = Rel -> [Expr]
M[Block, {] = Block -> [{, Decls, Stmts, }]
M[Join', &&] = Join' -> [&&, Equality, Join']
M[Join', ||] = Join' -> [ε]
M[Join', )] = Join' -> [ε]
M[Join', ;] = Join' -> [ε]
M[Join', ]] = Join' -> [ε]
M[Equality, !] = Equality -> [Rel, Equality']
M[Equality, num] = Equality -> [Rel, Equality']
M[Equality, (] = Equality -> [Rel, Equality']
M[Equality, true] = Equality -> [Rel, Equality']
M[Equality, false] = Equality -> [Rel, Equality']
M[Equality, id] = Equality -> [Rel, Equality']
M[Equality, real] = Equality -> [Rel, Equality']
M[Equality, -] = Equality -> [Rel, Equality']
M[Seq, break] = Seq -> [Stmt, seq]
M[Seq, do] = Seq -> [Stmt, seq]
M[Seq, {] = Seq -> [Stmt, seq]
M[Seq, id] = Seq -> [Stmt, seq]
M[Seq, while] = Seq -> [Stmt, seq]
M[Seq, if] = Seq -> [Stmt, seq]
M[Seq, }] = Seq -> [ε]
